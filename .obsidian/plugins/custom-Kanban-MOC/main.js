/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toModule = (module2) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __async = (__this, __arguments, generator) => {
  return new Promise((resolve, reject) => {
    var fulfilled = (value) => {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    };
    var rejected = (value) => {
      try {
        step(generator.throw(value));
      } catch (e) {
        reject(e);
      }
    };
    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
    step((generator = generator.apply(__this, __arguments)).next());
  });
};

// main.ts
__export(exports, {
  default: () => MyPlugin
});
var import_fs = __toModule(require("fs"));
var import_obsidian = __toModule(require("obsidian"));
var DEFAULT_SETTINGS = {
  topFolder: "AllFiles",
  resMOCfileName: "",
  prjMOCfileName: "",
  templatesFolder: "AllFiles/templates"
};
var MyPlugin = class extends import_obsidian.Plugin {
  onload() {
    return __async(this, null, function* () {
      yield this.loadSettings();
      this.addSettingTab(new SampleSettingTab(this.app, this));
      this.addCommand({
        id: "create-res",
        name: "\u521B\u5EFA\u65B0\u8D44\u6E90",
        callback: () => {
          new AddItemModal(this.app, this, "\u521B\u5EFA\u65B0\u8D44\u6E90").open();
        }
      });
      this.addCommand({
        id: "rename-res",
        name: "\u4FEE\u6539\u8D44\u6E90\u540D\u79F0",
        callback: () => {
          new AddItemModal(this.app, this, "\u4FEE\u6539\u8D44\u6E90\u540D\u79F0").open();
        }
      });
      this.addCommand({
        id: "delete-res",
        name: "\u5220\u9664\u8D44\u6E90",
        callback: () => {
          new AddItemModal(this.app, this, "\u5220\u9664\u8D44\u6E90").open();
        }
      });
      this.addCommand({
        id: "create-prj",
        name: "\u521B\u5EFA\u65B0\u9879\u76EE",
        callback: () => {
          new AddItemModal(this.app, this, "\u521B\u5EFA\u65B0\u9879\u76EE").open();
        }
      });
      this.addCommand({
        id: "rename-prj",
        name: "\u4FEE\u6539\u9879\u76EE\u540D\u79F0",
        callback: () => {
          new AddItemModal(this.app, this, "\u4FEE\u6539\u9879\u76EE\u540D\u79F0").open();
        }
      });
      this.addCommand({
        id: "delete-prj",
        name: "\u5220\u9664\u9879\u76EE",
        callback: () => {
          new AddItemModal(this.app, this, "\u5220\u9664\u9879\u76EE").open();
        }
      });
      this.addCommand({
        id: "update-MOC",
        name: "\u66F4\u65B0\u7D22\u5F15",
        callback: () => {
          this.updateMOC();
        }
      });
    });
  }
  onunload() {
  }
  loadSettings() {
    return __async(this, null, function* () {
      this.settings = Object.assign({}, DEFAULT_SETTINGS, yield this.loadData());
    });
  }
  saveSettings() {
    return __async(this, null, function* () {
      yield this.saveData(this.settings);
    });
  }
  updateMOC() {
    if (this.checkSettings()) {
      for (var file of this.app.vault.root.children) {
        if (file.name == `${this.settings.resMOCfileName}.md`) {
          var resMOC = file;
        } else if (file.name == `${this.settings.prjMOCfileName}.md`) {
          var prjMOC = file;
        }
      }
      var shouldbeIndexedFiles = this.getShouldBeIndexedFilesList();
      var IndexedFiles = new Array();
      if (this.app.metadataCache.getFileCache(resMOC).links) {
        for (var link of this.app.metadataCache.getFileCache(resMOC).links) {
          for (var name of shouldbeIndexedFiles["\u8D44\u6E90"]) {
            if (link.link == name) {
              IndexedFiles.push(name);
              break;
            }
          }
        }
      }
      if (this.app.metadataCache.getFileCache(prjMOC).links) {
        for (var link of this.app.metadataCache.getFileCache(prjMOC).links) {
          for (var name of shouldbeIndexedFiles["\u9879\u76EE"]) {
            if (link.link == name) {
              IndexedFiles.push(name);
              break;
            }
          }
        }
      }
      this.app.vault.read(resMOC).then((data) => {
        var NotIndexedFiles = "";
        for (var name2 of shouldbeIndexedFiles["\u8D44\u6E90"]) {
          if (IndexedFiles.indexOf(name2) == -1)
            [
              NotIndexedFiles = `${NotIndexedFiles}- [ ] [[${name2}]]
`
            ];
        }
        console.log(NotIndexedFiles);
        if (data.indexOf("## ") != -1) {
          var result = data.replace(/## .*?\n/, "$&" + NotIndexedFiles);
          (0, import_fs.writeFile)(`${this.app.vault.adapter.basePath}\\${this.settings.resMOCfileName}.md`, result, () => {
            new import_obsidian.Notice("\u8D44\u6E90\u7D22\u5F15\u66F4\u65B0\u5B8C\u6210");
          });
        } else {
          new import_obsidian.Notice("\u8BF7\u786E\u4FDD\u8D44\u6E90MOC\u6587\u6863\u4E3A\u770B\u677F\u6A21\u5F0F\uFF0C\u4E14\u5DF2\u8BBE\u7F6E\u4E00\u4E2A\u5217");
        }
      });
      this.app.vault.read(prjMOC).then((data) => {
        var NotIndexedFiles = "";
        for (var name2 of shouldbeIndexedFiles["\u9879\u76EE"]) {
          if (IndexedFiles.indexOf(name2) == -1)
            [
              NotIndexedFiles = `${NotIndexedFiles}- [ ] [[${name2}]]
`
            ];
        }
        console.log(NotIndexedFiles);
        if (data.indexOf("## ") != -1) {
          var result = data.replace(/## .*?\n/, "$&" + NotIndexedFiles);
          (0, import_fs.writeFile)(`${this.app.vault.adapter.basePath}\\${this.settings.prjMOCfileName}.md`, result, () => {
            new import_obsidian.Notice("\u9879\u76EE\u7D22\u5F15\u66F4\u65B0\u5B8C\u6210");
          });
        } else {
          new import_obsidian.Notice("\u8BF7\u786E\u4FDD\u9879\u76EEMOC\u6587\u6863\u4E3A\u770B\u677F\u6A21\u5F0F\uFF0C\u4E14\u5DF2\u8BBE\u7F6E\u4E00\u4E2A\u5217");
        }
      });
    }
  }
  getShouldBeIndexedFilesList() {
    var attachmentFolder = this.app.vault.config.attachmentFolderPath.replace("./", "");
    const topFolder = this.settings.topFolder;
    var root = this.app.vault.getAbstractFileByPath(topFolder);
    var shouldBeIndexedFilesList = new Array();
    shouldBeIndexedFilesList["\u8D44\u6E90"] = [];
    shouldBeIndexedFilesList["\u9879\u76EE"] = [];
    for (var FirstLevelChild of root.children) {
      if (FirstLevelChild.path.endsWith(".md")) {
        console.log(`${topFolder} \u6587\u4EF6\u5939\u4E0B\u4E0D\u5E94\u51FA\u73B0md\u6587\u6863:
${FirstLevelChild.name}`);
        new import_obsidian.Notice(`${topFolder} \u6587\u4EF6\u5939\u4E0B\u4E0D\u5E94\u51FA\u73B0md\u6587\u6863:
${FirstLevelChild.name}`);
      } else if (FirstLevelChild.path == this.settings.templatesFolder) {
      } else {
        shouldBeIndexedFilesList[FirstLevelChild.name] = [];
        for (var SecondLevelChild of FirstLevelChild.children) {
          var RukouFile = false;
          if (SecondLevelChild.path.endsWith(".md")) {
            console.log(`${FirstLevelChild.path} \u6587\u4EF6\u5939\u4E0B\u4E0D\u5E94\u51FA\u73B0md\u6587\u6863:
${SecondLevelChild.name}`);
            new import_obsidian.Notice(`${FirstLevelChild.path} \u6587\u4EF6\u5939\u4E0B\u4E0D\u5E94\u51FA\u73B0md\u6587\u6863:
${SecondLevelChild.name}`);
          } else {
            for (var ThirdLevelChild of SecondLevelChild.children) {
              if (ThirdLevelChild.path.endsWith(".md") && ThirdLevelChild.name.replace(".md", "") == SecondLevelChild.name) {
                RukouFile = true;
                break;
              }
            }
          }
          if (RukouFile) {
            shouldBeIndexedFilesList[FirstLevelChild.name].push(SecondLevelChild.name);
          } else {
            console.log(`${SecondLevelChild.path} \u6587\u4EF6\u5939\u4E0B\u7F3A\u5C11
\u540D\u4E3A\uFF1A${SecondLevelChild.name}.md \u7684\u5165\u53E3\u6587\u6863`);
            new import_obsidian.Notice(`${SecondLevelChild.path} \u6587\u4EF6\u5939\u4E0B\u7F3A\u5C11
\u540D\u4E3A\uFF1A${SecondLevelChild.name}.md \u7684\u5165\u53E3\u6587\u6863`);
          }
        }
      }
    }
    return shouldBeIndexedFilesList;
  }
  checkNameFormat(name) {
    if (name) {
      for (var cha of name) {
        if ('*"\\/<>:|?'.indexOf(cha) != -1) {
          new import_obsidian.Notice('\u547D\u540D\u4E0D\u5F97\u51FA\u73B0\u4EE5\u4E0B\u5B57\u7B26\uFF1A*"\\/<>:|?');
          return false;
        }
      }
      return true;
    } else
      return false;
  }
  checkSettings() {
    var topFolderInRoot = false;
    var resMOCfileNameInRoot = false;
    var prjMOCfileNameInRoot = false;
    for (var file of this.app.vault.root.children) {
      if (file.path == this.settings.topFolder) {
        topFolderInRoot = true;
      }
      if (file.path == `${this.settings.resMOCfileName}.md`) {
        resMOCfileNameInRoot = true;
      }
      if (file.path == `${this.settings.prjMOCfileName}.md`) {
        prjMOCfileNameInRoot = true;
      }
    }
    var templatesFolderExist = false;
    var resTemplateExist = false;
    var prjTemplateExist = false;
    if (this.app.vault.getAbstractFileByPath(this.settings.templatesFolder)) {
      templatesFolderExist = true;
      for (var file of this.app.vault.getAbstractFileByPath(this.settings.templatesFolder).children) {
        if (file.name == "\u8D44\u6E90-\u6A21\u677F.md") {
          resTemplateExist = true;
        }
        if (file.name == "\u9879\u76EE-\u6A21\u677F.md") {
          prjTemplateExist = true;
        }
      }
    }
    if (topFolderInRoot && resMOCfileNameInRoot && prjMOCfileNameInRoot && templatesFolderExist && resTemplateExist && prjTemplateExist) {
      return true;
    } else {
      if (!topFolderInRoot) {
        new import_obsidian.Notice("\u603B\u6587\u4EF6\u5939\u8DEF\u5F84\u5FC5\u987B\u662F\u4F4D\u4E8E\u5E93\u7684\u6839\u76EE\u5F55\u4E0B\u7684\u6587\u4EF6\u5939");
      }
      if (!resMOCfileNameInRoot) {
        new import_obsidian.Notice("\u8D44\u6E90MOC\u6587\u6863\u8DEF\u5F84\u5FC5\u987B\u662F\u4F4D\u4E8E\u5E93\u7684\u6839\u76EE\u5F55\u4E0B");
      }
      if (!prjMOCfileNameInRoot) {
        new import_obsidian.Notice("\u9879\u76EEMOC\u6587\u6863\u8DEF\u5F84\u5FC5\u987B\u662F\u4F4D\u4E8E\u5E93\u7684\u6839\u76EE\u5F55\u4E0B");
      }
      if (!templatesFolderExist) {
        new import_obsidian.Notice(`\u6A21\u677F\u6587\u4EF6\u5939 ${this.settings.templatesFolder} \u4E0D\u5B58\u5728`);
      } else {
        if (!resTemplateExist) {
          new import_obsidian.Notice(`\u672A\u5728 ${this.settings.templatesFolder} \u4E2D\u627E\u5230\u201C\u8D44\u6E90-\u6A21\u677F.md\u201D\u6587\u6863`);
        }
        if (!prjTemplateExist) {
          new import_obsidian.Notice(`\u672A\u5728 ${this.settings.templatesFolder} \u4E2D\u627E\u5230\u201C\u9879\u76EE-\u6A21\u677F.md\u201D\u6587\u6863`);
        }
      }
      return false;
    }
  }
};
var AddItemModal = class extends import_obsidian.Modal {
  constructor(app, plugin, opType) {
    super(app);
    this.plugin = plugin;
    this.opType = opType;
  }
  onOpen() {
    if (this.plugin.checkSettings()) {
      switch (this.opType) {
        case "\u521B\u5EFA\u65B0\u8D44\u6E90":
          this.createItem("\u8D44\u6E90");
          break;
        case "\u4FEE\u6539\u8D44\u6E90\u540D\u79F0":
          this.renameItem("\u8D44\u6E90");
          break;
        case "\u5220\u9664\u8D44\u6E90":
          this.deleteItem("\u8D44\u6E90");
          break;
        case "\u521B\u5EFA\u65B0\u9879\u76EE":
          this.createItem("\u9879\u76EE");
          break;
        case "\u4FEE\u6539\u9879\u76EE\u540D\u79F0":
          this.renameItem("\u9879\u76EE");
          break;
        case "\u5220\u9664\u9879\u76EE":
          this.deleteItem("\u9879\u76EE");
          break;
        default:
      }
    } else
      this.close();
  }
  createItem(folderName) {
    const { contentEl } = this;
    const title = this.titleEl;
    title.setText(`${this.opType}`);
    var newItemName = contentEl.createEl("input");
    newItemName.placeholder = "\u65B0\u6587\u4EF6\u7684\u540D\u79F0";
    newItemName.setAttrs({
      "class": "kanbanMOC"
    });
    var creatButton = contentEl.createEl("button");
    creatButton.setText("   \u786E\u5B9A   ");
    creatButton.setAttrs({
      "class": "kanbanMOC"
    });
    var plugin = this.plugin;
    var opType = this.opType;
    creatButton.onclick = function() {
      if (plugin.checkNameFormat(newItemName.value)) {
        var indexedFiles = plugin.getShouldBeIndexedFilesList();
        var okToGoOn = true;
        for (var key in indexedFiles) {
          if (indexedFiles[key].indexOf(newItemName.value) != -1) {
            new import_obsidian.Notice("\u5DF2\u5B58\u5728\u91CD\u540D\u6587\u4EF6\uFF0C\u8BF7\u91CD\u65B0\u8F93\u5165\u65B0\u540D\u79F0");
            okToGoOn = false;
            break;
          }
        }
        if (okToGoOn) {
          plugin.app.vault.createFolder(`${plugin.settings.topFolder}/${folderName}/${newItemName.value}`);
          for (var file of plugin.app.vault.getMarkdownFiles()) {
            if (file.path == `${plugin.settings.templatesFolder}/${folderName}-\u6A21\u677F.md`) {
              plugin.app.vault.create(`${plugin.settings.topFolder}/${folderName}/${newItemName.value}/${newItemName.value}.md`, file.unsafeCachedData);
              new import_obsidian.Notice(`\u5DF2\u6210\u529F${opType}\uFF1A${newItemName.value}`);
              setTimeout(function() {
                plugin.updateMOC();
              }, 1 * 1e3);
            }
          }
        }
      }
    };
  }
  renameItem(folderName) {
    const { contentEl } = this;
    const title = this.titleEl;
    title.setText(`${this.opType}`);
    var newItemName = contentEl.createEl("input");
    newItemName.placeholder = "\u539F\u6587\u4EF6\u65E7\u540D\u79F0";
    newItemName.setAttrs({
      "class": "kanbanMOC",
      "list": "fileSearch"
    });
    var searchResult = contentEl.createEl("datalist");
    searchResult.setAttrs({
      "class": "kanbanMOC",
      "id": "fileSearch"
    });
    var modal = this;
    var plugin = this.plugin;
    newItemName.oninput = function() {
      searchToSelect(newItemName.value, modal.opType, plugin, searchResult);
    };
    contentEl.createEl("br");
    var newItemName2 = contentEl.createEl("input");
    newItemName2.placeholder = "\u539F\u6587\u4EF6\u65B0\u540D\u79F0";
    newItemName2.setAttrs({
      "class": "kanbanMOC"
    });
    contentEl.createEl("br");
    var creatButton = contentEl.createEl("button");
    creatButton.setText("   \u786E\u5B9A   ");
    creatButton.setAttrs({
      "class": "kanbanMOC"
    });
    var opType = this.opType;
    creatButton.onclick = function() {
      if (plugin.checkNameFormat(newItemName.value) && plugin.checkNameFormat(newItemName2.value)) {
        var indexedFiles = plugin.getShouldBeIndexedFilesList();
        var oldNameExists = false;
        var newNameRepeat = false;
        for (var key in indexedFiles) {
          if (indexedFiles[key].indexOf(newItemName.value) != -1) {
            oldNameExists = true;
          }
          if (indexedFiles[key].indexOf(newItemName2.value) != -1) {
            newNameRepeat = true;
          }
        }
        if (newNameRepeat || !oldNameExists) {
          if (!oldNameExists) {
            new import_obsidian.Notice("\u539F\u6587\u4EF6\u4E0D\u5B58\u5728\uFF0C\u8BF7\u91CD\u65B0\u8F93\u5165\u539F\u6587\u4EF6\u65E7\u540D\u79F0\uFF1A");
          }
          if (newNameRepeat) {
            new import_obsidian.Notice("\u65B0\u6587\u4EF6\u540D\u91CD\u590D\uFF0C\u8BF7\u91CD\u65B0\u8F93\u5165\u539F\u6587\u4EF6\u65B0\u540D\u79F0\uFF1A");
          }
        } else {
          var opFile = plugin.app.vault.getAbstractFileByPath(`${plugin.settings.topFolder}/${folderName}/${newItemName.value}/${newItemName.value}.md`);
          plugin.app.fileManager.renameFile(opFile, `${plugin.settings.topFolder}/${folderName}/${newItemName.value}/${newItemName2.value}.md`);
          var oldFolder = plugin.app.vault.getAbstractFileByPath(`${plugin.settings.topFolder}/${folderName}/${newItemName.value}`);
          plugin.app.fileManager.renameFile(oldFolder, `${plugin.settings.topFolder}/${folderName}/${newItemName2.value}`);
          new import_obsidian.Notice(`\u5DF2\u6210\u529F${opType}\uFF1A${newItemName.value} => ${newItemName2.value}`);
          setTimeout(function() {
            plugin.updateMOC();
          }, 1 * 1e3);
        }
      }
    };
  }
  deleteItem(folderName) {
    const { contentEl } = this;
    const title = this.titleEl;
    title.setText(`${this.opType}`);
    var newItemName = contentEl.createEl("input");
    newItemName.placeholder = "\u5220\u9664\u7684\u6587\u4EF6\u540D\u79F0";
    newItemName.setAttrs({
      "class": "kanbanMOC",
      "list": "fileSearch"
    });
    var searchResult = contentEl.createEl("datalist");
    searchResult.setAttrs({
      "class": "kanbanMOC",
      "id": "fileSearch"
    });
    var modal = this;
    var plugin = this.plugin;
    newItemName.oninput = function() {
      searchToSelect(newItemName.value, modal.opType, plugin, searchResult);
    };
    contentEl.createEl("br");
    var newItemName2 = contentEl.createEl("input");
    newItemName2.placeholder = "\u8BF7\u624B\u52A8\u8F93\u5165\uFF1A\u786E\u8BA4\u5220\u9664";
    newItemName2.setAttrs({
      "class": "kanbanMOC",
      "onpaste": "return false",
      "oncut": "return false"
    });
    contentEl.createEl("br");
    var creatButton = contentEl.createEl("button");
    creatButton.setText("   \u786E\u5B9A   ");
    creatButton.setAttrs({
      "class": "kanbanMOC"
    });
    var plugin = this.plugin;
    var opType = this.opType;
    creatButton.onclick = function() {
      if (plugin.checkNameFormat(newItemName.value)) {
        if (newItemName2.value == "\u786E\u8BA4\u5220\u9664") {
          var indexedFiles = plugin.getShouldBeIndexedFilesList();
          var oldNameExists = false;
          for (var key in indexedFiles) {
            if (indexedFiles[key].indexOf(newItemName.value) != -1) {
              oldNameExists = true;
            }
          }
          if (!oldNameExists) {
            new import_obsidian.Notice("\u539F\u6587\u4EF6\u4E0D\u5B58\u5728\uFF0C\u8BF7\u91CD\u65B0\u8F93\u5165\u539F\u6587\u4EF6\u65E7\u540D\u79F0\uFF1A");
          } else {
            var oldFolder = plugin.app.vault.getAbstractFileByPath(`${plugin.settings.topFolder}/${folderName}/${newItemName.value}`);
            plugin.app.vault.trash(oldFolder, true);
            new import_obsidian.Notice(`\u5DF2\u6210\u529F${opType}\uFF1A${newItemName.value}
\u6587\u4EF6\u5DF2\u79FB\u5165\u7CFB\u7EDF\u56DE\u6536\u7AD9`);
            setTimeout(function() {
              plugin.updateMOC();
            }, 1 * 1e3);
          }
        } else {
          new import_obsidian.Notice("\u8BF7\u624B\u52A8\u8F93\u5165\uFF1A\u786E\u8BA4\u5220\u9664");
        }
      }
    };
  }
};
function searchToSelect(keyWord, resOrPrj, plugin, searchResult) {
  if (keyWord) {
    var sList = new Array();
    if (resOrPrj.indexOf("\u8D44\u6E90") != -1) {
      sList = plugin.getShouldBeIndexedFilesList()["\u8D44\u6E90"];
    } else if (resOrPrj.indexOf("\u9879\u76EE") != -1) {
      sList = plugin.getShouldBeIndexedFilesList()["\u9879\u76EE"];
    }
    var len = sList.length;
    var arr = [];
    for (var i = 0; i < len; i++) {
      if (sList[i].toLowerCase().indexOf(keyWord.toLowerCase()) >= 0) {
        arr.push(sList[i]);
        if (arr.length >= 5) {
          break;
        }
      }
    }
    searchResult.innerHTML = "";
    var item = null;
    for (var i = 0; i < arr.length; i++) {
      item = document.createElement("option");
      item.innerHTML = arr[i];
      searchResult.appendChild(item);
    }
  }
}
var SampleSettingTab = class extends import_obsidian.PluginSettingTab {
  constructor(app, plugin) {
    super(app, plugin);
    this.plugin = plugin;
  }
  display() {
    const { containerEl } = this;
    containerEl.empty();
    containerEl.createEl("h2", { text: "\u770B\u677FMOC\u8BBE\u7F6E\u9762\u677F." });
    containerEl.createEl("a", { text: "github\u5730\u5740", "href": "https://github.com/1657744680/obsidian-Kanban-MOC" });
    containerEl.createEl("br");
    containerEl.createEl("a", { text: "\u4EE5\u4E0B\u6240\u6709\u9009\u9879\u90FD\u5FC5\u987B\u8FDB\u884C\u8BBE\u7F6E\uFF01\uFF01" });
    new import_obsidian.Setting(containerEl).setName("\u603B\u6587\u4EF6\u5939\u8DEF\u5F84\uFF1A").setDesc("\u2623\uFE0F\u6CE8\u610F\uFF1A\u5FC5\u987B\u662F\u4F4D\u4E8E\u5E93\u7684\u6839\u76EE\u5F55\u4E0B\u7684\u6587\u4EF6\u5939\uFF01\uFF01\n\u{1F4A1}\u8BF4\u660E\uFF1A\u5C06\u60F3\u8981\u5B58\u653E\u8D44\u6E90\u3001\u9879\u76EE\u6587\u4EF6\u5939\u7684\u8DEF\u5F84\u5199\u5728\u65B9\u6846\u5185:\n\u82E5\u5199\uFF1AAllFiles\uFF0C\u5219\u5728\u65B0\u5EFA\u8D44\u6E90\u3001\u9879\u76EE\u65F6\n\u5C06\u5728 /Allfiles/\u8D44\u6E90/ \u6216 /Allfiles/\u9879\u76EE/ \u8DEF\u5F84\u4E0B\u521B\u5EFA\u65B0\u7684\u6587\u4EF6").addText((text) => text.setPlaceholder("\u4F8B\u5982 AllFiles").setValue(this.plugin.settings.topFolder).onChange((value) => __async(this, null, function* () {
      this.plugin.settings.topFolder = value;
      yield this.plugin.saveSettings();
    })));
    new import_obsidian.Setting(containerEl).setName("\u8D44\u6E90MOC\u6587\u4EF6\u9009\u62E9\uFF1A").setDesc("\u2623\uFE0F\u6CE8\u610F\uFF1A\u5FC5\u987B\u662F\u4F4D\u4E8E\u5E93\u7684\u6839\u76EE\u5F55\u4E0B\u7684\u6587\u6863\uFF01\uFF01\n\u9664\u6B64\u4E4B\u5916MOC\u6587\u6863\u8FD8\u9700\u8981\u8BBE\u7F6E\u6210kanban\u5E76\u6709\u81F3\u5C11\u4E00\u5217\n\u{1F4A1}\u8BF4\u660E\uFF1A\u4F8B\u5982\u6211\u60F3\u9009\u62E9\u201C\u8D44\u6E90MOC.md\u201D\u4F5C\u4E3A\u6211\u7684\u8D44\u6E90MOC\u6587\u6863\uFF0C\u90A3\u6211\u5C31\u5199\u201C\u8D44\u6E90MOC\u201D").addText((text) => text.setPlaceholder("\u4F8B\u5982 \u8D44\u6E90MOC").setValue(this.plugin.settings.resMOCfileName).onChange((value) => __async(this, null, function* () {
      this.plugin.settings.resMOCfileName = value;
      yield this.plugin.saveSettings();
    })));
    new import_obsidian.Setting(containerEl).setName("\u9879\u76EEMOC\u6587\u4EF6\u9009\u62E9\uFF1A").setDesc("\u2623\uFE0F\u6CE8\u610F\uFF1A\u5FC5\u987B\u662F\u4F4D\u4E8E\u5E93\u7684\u6839\u76EE\u5F55\u4E0B\u7684\u6587\u6863\uFF01\uFF01\n\u9664\u6B64\u4E4B\u5916MOC\u6587\u6863\u8FD8\u9700\u8981\u8BBE\u7F6E\u6210kanban\u5E76\u6709\u81F3\u5C11\u4E00\u5217\n\u{1F4A1}\u8BF4\u660E\uFF1A\u4F8B\u5982\u6211\u60F3\u9009\u62E9\u201C\u9879\u76EEMOC.md\u201D\u4F5C\u4E3A\u6211\u7684\u9879\u76EEMOC\u6587\u6863\uFF0C\u90A3\u6211\u5C31\u5199\u201C\u9879\u76EEMOC\u201D").addText((text) => text.setPlaceholder("\u4F8B\u5982 \u9879\u76EEMOC").setValue(this.plugin.settings.prjMOCfileName).onChange((value) => __async(this, null, function* () {
      this.plugin.settings.prjMOCfileName = value;
      yield this.plugin.saveSettings();
    })));
    new import_obsidian.Setting(containerEl).setName("\u5165\u53E3\u6587\u6863\u6A21\u677F\u6587\u4EF6\u5939\u8BBE\u7F6E\uFF1A").setDesc("\u2623\uFE0F\u6CE8\u610F\uFF1A\u6A21\u677F\u6587\u4EF6\u5939\u4E2D\u5FC5\u987B\u5305\u542B\u201C\u8D44\u6E90-\u6A21\u677F.md\u201D\u548C\u201C\u9879\u76EE-\u6A21\u677F.md\u201D2\u4E2A\u6587\u6863\uFF01\uFF01\n\u{1F4A1}\u8BF4\u660E\uFF1A\u4F8B\u5982\u6211\u60F3\u4E3A\u8D44\u6E90\u6587\u4EF6\u8BBE\u7F6E\u4E00\u4E2A\u6A21\u677F\uFF0C\u5219\u5728\u6A21\u677F\u6587\u4EF6\u5939\u4E0B\u65B0\u5EFA\u4E00\u4E2A\u540D\u4E3A\u201C\u8D44\u6E90-\u6A21\u677F.md\u201D\u7684\u6587\u6863").addText((text) => text.setPlaceholder("\u4F8B\u5982 AllFiles/templates").setValue(this.plugin.settings.templatesFolder).onChange((value) => __async(this, null, function* () {
      this.plugin.settings.templatesFolder = value;
      yield this.plugin.saveSettings();
    })));
  }
};
//# sourceMappingURL=data:application/json;base64,
